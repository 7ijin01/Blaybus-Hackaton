plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	implementation 'org.json:json:20231013'
	implementation 'org.bytedeco:javacv:1.5.11'
	implementation 'org.bytedeco:ffmpeg-platform:5.1.2-1.5.11'

	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

	// Spring Boot Starter
	implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
  implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// Hibernate (MongoDB 사용하므로 JPA는 제외)
	implementation 'org.hibernate.orm:hibernate-core:6.6.4.Final'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5'

	// JSON 처리
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.1'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

	// Swagger (OpenAPI)
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'

	// JWT 관련
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	// ModelMapper
	implementation 'org.modelmapper:modelmapper:2.4.2'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Jakarta API
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

	// 기타 유틸리티
	implementation 'org.objenesis:objenesis:3.2'
	runtimeOnly 'com.palantir.safe-logging:logger:3.7.0'

	// Jakarta Annotations
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'


	//구글 캘린더 api
	implementation 'com.google.api-client:google-api-client:2.0.0'
	implementation 'com.google.oauth-client:google-oauth-client-jetty:1.34.1'
	implementation 'com.google.apis:google-api-services-calendar:v3-rev20220715-2.0.0'
	implementation group: 'com.google.api-client', name: 'google-api-client-jackson2', version: '1.20.0'

	implementation 'com.google.cloud:google-cloud-meet:0.3.0'
	implementation 'com.google.auth:google-auth-library-oauth2-http:1.19.0'



	// 개발용
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// 테스트 관련
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mockito:mockito-core:5.5.0'
	testImplementation 'org.mockito:mockito-inline:5.2.0'
	testImplementation 'junit:junit:4.13.2'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}


tasks.named('test') {
	useJUnitPlatform()
}
