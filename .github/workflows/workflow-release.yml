name: CI / CD

on:
  push:
    branches: [deploy]

jobs:
  CI:
    runs-on: ubuntu-latest

    env:
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      IMAGE_NAME: blaybus
      IMAGE_TAG: ${{ github.sha }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      KAKAOPAY_KEY: ${{ secrets.KAKAOPAY_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'adopt'

      - name: Google Cloud SDK 설정
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Docker를 위한 gcloud 인증 설정
        run: gcloud auth configure-docker --quiet

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build with Gradle (Test 제외)
        run: ./gradlew build --exclude-task test

      - name: Verify JAR file
        run: ls -la build/libs/

      - name: Docker 인증 구성
        run: gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

      - name: Docker 이미지 빌드 및 푸시
        run: |
          docker build --build-arg SPRING_PROFILE=prod -t us-central1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/docker/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .
          docker push us-central1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/docker/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

  CD:
    runs-on: ubuntu-latest
    needs: CI

    env:
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      IMAGE_NAME: blaybus
      IMAGE_TAG: ${{ github.sha }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      KAKAOPAY_KEY: ${{ secrets.KAKAOPAY_KEY }}

    steps:
      - name: GCP 프로젝트 설정
        run: gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
        
      - name: GKE 클러스터 인증
        run: gcloud container clusters get-credentials cluster-1 --region us-central1

      - name: 기존 Deployment의 이미지 업데이트
        run: kubectl set image deployment/blaybus-deployment blaybus-container=us-central1-docker.pkg.dev/${GCP_PROJECT_ID}/docker/${IMAGE_NAME}:${IMAGE_TAG}

      - name: 배포 서버에 SSH로 연결하여 배포 (GKE 적용 후 제거 가능)
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.DEPLOY_SERVER_HOST }}
          username: ${{ secrets.DEPLOY_SERVER_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          debug: true
          envs: GCP_PROJECT_ID, IMAGE_NAME, IMAGE_TAG, DEPLOY_PATH, GOOGLE_CLIENT_ID, GOOGLE_CLIENT_SECRET, KAKAOPAY_KEY
          script: |
            sudo docker stop ${IMAGE_NAME} || true
            sudo docker rm ${IMAGE_NAME} || true
            
            sudo docker login -u _json_key --password-stdin https://us-central1-docker.pkg.dev <<< '${{ secrets.GCP_SA_KEY }}'
            sudo docker pull us-central1-docker.pkg.dev/${GCP_PROJECT_ID}/docker/${IMAGE_NAME}:${IMAGE_TAG}
            
            sudo docker run -d \
            --name ${IMAGE_NAME} \
            --network compose_default \
            -p 8080:8080 \
            -p 8443:8443 \
            -v /etc/letsencrypt/live/blaybus-glowup.com/keystore.p12:/etc/letsencrypt/live/blaybus-glowup.com/keystore.p12 \
            -e GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID} \
            -e GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET} \
            -e KAKAOPAY_KEY=${KAKAOPAY_KEY} \
            us-central1-docker.pkg.dev/${GCP_PROJECT_ID}/docker/${IMAGE_NAME}:${IMAGE_TAG}